#!/usr/bin/env bash

# parses dev.yml, finds config files, sets their "name" to a hash
# of their contents so we can rotate configs on stack deploy

if [ -z "$PS1" ]; then
  echo Because this script exports environment variables
  echo you have to "source hash [stack file]" for it to work.
  exit
fi

if [ -z "$1" ]; then
  echo Usage: hash [stack file]
  [ -z "$PS1" ] && exit || return;
fi

FILE=$1
PREFIX=stack_

# function parses yaml with optional paramter for prefix
function parse_yaml {
  local prefix=$2
  local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
  sed -ne "s|^\($s\):|\1|" \
    -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
    -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
    awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
        if (length($3) > 0) {
          vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
          printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
        }
      }'
}

eval $(parse_yaml $FILE $PREFIX)

echo Done parsing yaml.
for config in $(set | cut -d= -f1 | grep "stack_configs" | grep "file$"); do
  echo hash $config ${!config}
	temp="$config=$(md5sum ${!config} | awk '{ print $1 }')"
	echo $temp
	export $temp
done
